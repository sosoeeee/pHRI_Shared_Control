world_frame: "world"
use_simulate: true
two_dimesion: true

## actuator params
actuator:
  endDeviation: 0.14
  initJointPoses:
    # - {q1: 0.1783, q2: 0.5602, q3: -0.2449, q4: -1.5819, q5: 1.9484, q6: 0.1644, q7: 0.6433}
    - {q1: 0.1683, q2: 0.4251, q3: -0.0850, q4: -1.4250, q5: -0.0042, q6: 1.2527, q7: 1.2268}
    - {q1: -0.6816, q2: 0.4251, q3: -0.0850, q4: -1.4250, q5: -0.0042, q6: 1.2527, q7: 1.2268}
    - {q1: -0.8157, q2: 0.8359, q3: -0.0850, q4: -1.4880, q5: 0.0859, q6: 0.8214, q7: 0.63917}

  # initJointPoses: 
  #   - {q1: -0.8073, q2: 0.6508, q3: -0.1780, q4: -1.4782, q5: 0.1215, q6: 1.0317, q7: 0.1414}   # used to calibrate VICON frame

simulate_actuator:
  initPos: {x: 0.4, y: -0.378, z: 0.065}
  pub_frequency: 100  # must faster than control_frequency

## env publisher params
env_publisher:
  publish_rate: 1
  publish_topic: "env_obstacles"
  VICON_topics:
    - "/vicon/shr_obs1/shr_obs1"
    - "/vicon/shr_obs2/shr_obs2"
    - "/ref1_1"
    - "/ref1_2"
    - "/ref2_1"
  static: true


  VICON_transform: {x: 2.36, y: -0.47, z: -0.54, qx: 0, qy: 0, qz: -0.707, qw: 0.707} # VICON frame according to world frame
  obstacle_args:
    - {id: 0, type: "cube", size_x: 0.1, size_y: 0.1, size_z: 0.1, cor_x: 0.005, cor_y: 0.052, cor_z: -0.075, x: -0.1431, y: -1.6597, z: 0.625}  
    - {id: 1, type: "cube", size_x: 0.1, size_y: 0.1, size_z: 0.1, cor_x: 0.018, cor_y: 0.06, cor_z: -0.055, x: -0.3561, y: -1.7491, z: 0.617}  
    - {id: 2, type: "cube", size_x: 0.1, size_y: 0.1, size_z: 0.1, ref: 0, offset_x: 0, offset_y: -0.15, offset_z: 0}
    - {id: 3, type: "cube", size_x: 0.1, size_y: 0.1, size_z: 0.1, ref: 0, offset_x: 0, offset_y: -0.3, offset_z: 0}
    - {id: 4, type: "cube", size_x: 0.1, size_y: 0.1, size_z: 0.1, ref: 1, offset_x: 0, offset_y: -0.1, offset_z: 0}


## Global planner params
global_planner:
  publish_rate: 10
  publish_topic: "global_plan"
  obstacles_dilate: 0.02
  smooth_step: 0.04 # actual distance between path points next to each other
  insert_step: 0.01
  
RRT_planner:
    max_iter: 2000
    step_size: 0.02
    line_collision_check_resolution: 0.005
    check_goal_prob: 0.005
    search_space:
      x:
        - 0.40
        - 0.75
      y:
        - -0.45
        - 0.03
      z:
        - 0
        - 0

## Local planner params
MinimumLocalPlanner:
  opt_order: 4
  conti_order: 3
  order: 5
  optimizeT: false

local_planner:
  ## add any params you want to change in teb local planner
  map_frame: "world"
  spacial_scale: 20
  plan_times: 5

  # trajectory
  teb_autosize: True
  dt_ref: 0.4 #
  dt_hysteresis: 0.1 #
  max_samples: 500
  global_plan_viapoint_sep: 1 #   
  via_points_ordered: false #
  publish_feedback: true #
  
  # Robot
  footprint_model: #
    type: "point"
    radius: 0.01

  max_vel_x: 0.4
  max_vel_x_backwards: 0.2
  max_vel_y: 0
  max_vel_theta: 0.3
  acc_lim_x: 0.5
  acc_lim_y: 0.2
  acc_lim_theta: 0.5
  min_turning_radius: 0.0 # omni-drive robot (can turn on place!)

  # GoalTolerance
  xy_goal_tolerance: 0.1 #
  yaw_goal_tolerance: 0.2 #
  free_goal_vel: False
  complete_global_plan: True

  # Obstacles
  min_obstacle_dist: 0.35 # This value must also include our robot radius, since footprint_model is set to "point". #
  inflation_dist: 0.37 #
  obstacle_poses_affected: 30

  # Optimization
  no_inner_iterations: 5
  no_outer_iterations: 4
  optimization_activate: True
  optimization_verbose: False
  penalty_epsilon: 0.1
  obstacle_cost_exponent: 1
  weight_max_vel_x: 2
  weight_max_vel_y: 2
  weight_max_vel_theta: 1
  weight_acc_lim_x: 1
  weight_acc_lim_y: 1
  weight_acc_lim_theta: 1
  weight_kinematics_nh: 1 # WE HAVE A HOLONOMIC ROBOT, JUST ADD A SMALL PENALTY
  weight_kinematics_forward_drive: 1
  weight_kinematics_turning_radius: 1
  weight_optimaltime: 1 # must be > 0
  weight_shortest_path: 0
  weight_obstacle: 100
  weight_inflation: 0.1
  weight_dynamic_obstacle: 10
  weight_dynamic_obstacle_inflation: 0.2
  weight_viapoint: 5
  weight_adapt_factor: 2

  # Homotopy Class Planner
  enable_homotopy_class_planning: true #
  enable_multithreading: True
  max_number_classes: 3
  selection_cost_hysteresis: 1.0
  selection_prefer_initial_plan: 0.9
  selection_obst_cost_scale: 2.0
  selection_alternative_time_cost: False
  selection_viapoint_cost_scale: 20.0  #
  
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  roadmap_graph_area_length_scale: 1.0
  h_signature_prescaler: 1
  h_signature_threshold: 0.1
  obstacle_heading_threshold: 0.45
  switching_blocking_period: 0.0
  viapoints_all_candidates: True
  delete_detours_backwards: True
  max_ratio_detours_duration_best_duration: 3.0

## controller params
controller_type: "Shared"  # Admittance, Shared, Switching

controller:
  control_frequency: 10 # must slower than the frequency of sampling the sensor data

impedance_controller:
  M: 1
  C: 40

shared_controller:
  M: 1
  C: 40
  threshold_force: 3.8
  local_len: 50
  replan_len: 380
  replan_len_num: 40
  replan_freq: 2
  replan_timeout: 1
  alpha: 100
  weight_r: 1       # 追踪机器人期望轨迹的误差权重为 weight_r*weight_tracking
  weight_h: 10
  weight_tracking: 1000
  load_traj: true
  deviation: 0.03   # the max tolerated deviation from robot desired traj
